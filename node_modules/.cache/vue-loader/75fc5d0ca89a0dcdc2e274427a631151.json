{"remainingRequest":"/Projetos/meutempo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Projetos/meutempo/src/components/city/CityDayInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Projetos/meutempo/src/components/city/CityDayInfo.vue","mtime":1569452920767},{"path":"/Projetos/meutempo/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Projetos/meutempo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Projetos/meutempo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  computed: {\n    ...mapGetters([\"city_info\"]),\n    description() {\n      let day = this.$moment(this.city_info.time).format(\"ddd\");\n      let time = this.$moment(this.city_info.time)\n        .format(\"hh:mm a\")\n        .toUpperCase();\n      return `${day}, ${time}, ${this.city_info.weather_state_name}`;\n    },\n    the_temp() {\n      return Number(this.city_info.the_temp).toFixed(0);\n    },\n    state_name_icon() {\n      const dict = [\n        \"cloudy,\",\n        \"cloud,\",\n        \"dust,\",\n        \"hail,\",\n        \"fog,\",\n        \"hot,\",\n        \"hurricane\",\n        \"lightning\",\n        \"meteor\",\n        \"na\",\n        \"rain\",\n        \"raindrop\",\n        \"raindrops\",\n        \"refresh\",\n        \"sandstorm\",\n        \"showers\",\n        \"sleet\",\n        \"smog\",\n        \"smoke\",\n        \"snow\",\n        \"starts\",\n        \"sunrise\",\n        \"sunset\",\n        \"thunderstorm\",\n        \"tornado\",\n        \"tsunami\",\n        \"windy\"\n      ];\n      let icon = `wi-na`;\n      if (this.city_info.weather_state_name.toLowerCase() == `clear`) {\n        icon = `wi-stars`;\n      } else {\n        let words = this.city_info.weather_state_name.split(\" \");\n        words.forEach(w => {\n          let _w = w.trim().toLowerCase();\n          if (dict.indexOf(_w) !== -1) {\n            icon = `wi-${_w}`;\n          }\n        });\n      }\n\n      const url = require(`@/static/icons/${icon}.svg`);\n      return url;\n    }\n  }\n};\n",{"version":3,"sources":["CityDayInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CityDayInfo.vue","sourceRoot":"src/components/city","sourcesContent":["<template>\n  <div class=\"city-day-info\">\n    <v-card color=\"#F9F9F9\">\n      <v-list-item two-line>\n        <v-list-item-content>\n          <v-list-item-title class=\"headline\">{{ city_info.title }}</v-list-item-title>\n          <v-list-item-subtitle>{{ description }}</v-list-item-subtitle>\n        </v-list-item-content>\n      </v-list-item>\n\n      <v-card-text>\n        <v-row align=\"center\">\n          <v-col class=\"display-2\" cols=\"7\">{{ `${the_temp}&deg;C` }}</v-col>\n          <v-col cols=\"5\">\n            <v-img aspect-ratio=\"1\" :src=\"state_name_icon\" contain></v-img>\n          </v-col>\n        </v-row>\n      </v-card-text>\n\n      <div>\n        <v-list>\n          <v-list-item two-line>\n            <v-list-item-content>\n              <v-list-item-title>Humidity: {{ city_info.humidity }} %</v-list-item-title>\n              <v-list-item-subtitle>Max temp: {{ city_info.max_temp.toFixed(0) }} &deg;C</v-list-item-subtitle>\n              <v-list-item-subtitle>Min temp: {{ city_info.min_temp.toFixed(0) }} &deg;C</v-list-item-subtitle>\n              <v-list-item-subtitle>Wind speed: {{ city_info.wind_speed.toFixed(2) }} mph</v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </div>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  computed: {\n    ...mapGetters([\"city_info\"]),\n    description() {\n      let day = this.$moment(this.city_info.time).format(\"ddd\");\n      let time = this.$moment(this.city_info.time)\n        .format(\"hh:mm a\")\n        .toUpperCase();\n      return `${day}, ${time}, ${this.city_info.weather_state_name}`;\n    },\n    the_temp() {\n      return Number(this.city_info.the_temp).toFixed(0);\n    },\n    state_name_icon() {\n      const dict = [\n        \"cloudy,\",\n        \"cloud,\",\n        \"dust,\",\n        \"hail,\",\n        \"fog,\",\n        \"hot,\",\n        \"hurricane\",\n        \"lightning\",\n        \"meteor\",\n        \"na\",\n        \"rain\",\n        \"raindrop\",\n        \"raindrops\",\n        \"refresh\",\n        \"sandstorm\",\n        \"showers\",\n        \"sleet\",\n        \"smog\",\n        \"smoke\",\n        \"snow\",\n        \"starts\",\n        \"sunrise\",\n        \"sunset\",\n        \"thunderstorm\",\n        \"tornado\",\n        \"tsunami\",\n        \"windy\"\n      ];\n      let icon = `wi-na`;\n      if (this.city_info.weather_state_name.toLowerCase() == `clear`) {\n        icon = `wi-stars`;\n      } else {\n        let words = this.city_info.weather_state_name.split(\" \");\n        words.forEach(w => {\n          let _w = w.trim().toLowerCase();\n          if (dict.indexOf(_w) !== -1) {\n            icon = `wi-${_w}`;\n          }\n        });\n      }\n\n      const url = require(`@/static/icons/${icon}.svg`);\n      return url;\n    }\n  }\n};\n</script>\n\n<style lang=\"stylus\"></style>"]}]}